{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["import type { Tower, Alert, BatteryCell, PowerSource, PerformanceData } from './types';\n\nfunction generateHistoricalData(days: number): PerformanceData[] {\n  const data = [];\n  for (let i = days - 1; i >= 0; i--) {\n    const date = new Date();\n    date.setDate(date.getDate() - i);\n    data.push({\n      date: date.toISOString().split('T')[0],\n      signalStrength: -60 - Math.floor(Math.random() * 20),\n      userLoad: 100 + Math.floor(Math.random() * 150),\n      uploadSpeed: 20 + Math.floor(Math.random() * 30),\n      downloadSpeed: 100 + Math.floor(Math.random() * 100),\n      energyConsumption: 50 + Math.floor(Math.random() * 25),\n      stateOfCharge: 85 + Math.floor(Math.random() * 15), // Random SoC between 85% and 100%\n      voltage: 53.5 + (Math.random() - 0.5), // Random voltage around 53.5V\n    });\n  }\n  return data;\n}\n\nfunction generateBatteryCells(count: number, isCharging: boolean): BatteryCell[] {\n  const cells = [];\n  for (let i = 1; i <= count; i++) {\n    cells.push({\n      id: i,\n      voltage: parseFloat((3.7 + (Math.random() * 0.5 - 0.25)).toFixed(2)),\n      current: parseFloat((isCharging ? 1 : -1) * Math.random() * 5).toFixed(2),\n      stateOfCharge: Math.floor(80 + Math.random() * 20),\n      temperature: Math.floor(25 + Math.random() * 10),\n      internalResistance: parseFloat((15 + Math.random() * 5).toFixed(2)),\n    });\n  }\n  return cells;\n}\n\n\nexport const mockTowers: Tower[] = [\n  {\n    id: 'TWR-001',\n    name: 'Khalda Tower',\n    location: 'Amman, Jordan',\n    status: 'normal',\n    latitude: 31.9876,\n    longitude: 35.8437,\n    signalStrength: -65,\n    userLoad: 235,\n    uploadSpeed: 45.2,\n    downloadSpeed: 180.5,\n    latency: 22,\n    energyConsumption: 68.5,\n    batteryType: \"Lithium-ion\",\n    batteryCapacity: 200,\n    batteryCells: generateBatteryCells(8, true),\n    historicalData: generateHistoricalData(30),\n    powerSource: \"grid\",\n  },\n  {\n    id: 'TWR-002',\n    name: 'Al-Hashmi Tower',\n    location: 'Irbid, Jordan',\n    status: 'normal',\n    latitude: 32.5568,\n    longitude: 35.8474,\n    signalStrength: -72,\n    userLoad: 180,\n    uploadSpeed: 38.1,\n    downloadSpeed: 155.8,\n    latency: 28,\n    energyConsumption: 62.1,\n    batteryType: \"Lead-acid\",\n    batteryCapacity: 150,\n    batteryCells: generateBatteryCells(6, false),\n    historicalData: generateHistoricalData(30),\n    powerSource: \"solar\",\n  },\n  {\n    id: 'TWR-003',\n    name: 'New Zarqa Tower',\n    location: 'Zarqa, Jordan',\n    status: 'critical',\n    latitude: 32.0740,\n    longitude: 36.0917,\n    signalStrength: -110,\n    userLoad: 0,\n    uploadSpeed: 0,\n    downloadSpeed: 0,\n    latency: 0,\n    energyConsumption: 5.2,\n    batteryType: \"Lithium-ion\",\n    batteryCapacity: 200,\n    batteryCells: generateBatteryCells(8, false).map(c => ({ ...c, voltage: 3.2, current: 0, stateOfCharge: 5 })),\n    historicalData: generateHistoricalData(30),\n    powerSource: \"grid\",\n  },\n  {\n    id: 'TWR-004',\n    name: 'South Beach Tower',\n    location: 'Aqaba, Jordan',\n    status: 'warning',\n    latitude: 29.5321,\n    longitude: 35.0078,\n    signalStrength: -85,\n    userLoad: 75,\n    uploadSpeed: 20.5,\n    downloadSpeed: 90.3,\n    latency: 45,\n    energyConsumption: 55.7,\n    batteryType: \"VRLA\",\n    batteryCapacity: 180,\n    batteryCells: generateBatteryCells(8, true),\n    historicalData: generateHistoricalData(30),\n    powerSource: \"solar\",\n  },\n  {\n    id: 'TWR-005',\n    name: 'Downtown Tower',\n    location: 'Maan, Jordan',\n    status: 'normal',\n    latitude: 30.1925,\n    longitude: 35.7337,\n    signalStrength: -68,\n    userLoad: 210,\n    uploadSpeed: 42.8,\n    downloadSpeed: 175.0,\n    latency: 25,\n    energyConsumption: 71.3,\n    batteryType: \"Lithium-ion\",\n    batteryCapacity: 220,\n    batteryCells: generateBatteryCells(10, false),\n    historicalData: generateHistoricalData(30),\n    powerSource: \"grid\",\n  },\n    {\n    id: 'TWR-006',\n    name: 'Citadel Tower',\n    location: 'Salt, Jordan',\n    status: 'normal',\n    latitude: 32.0392,\n    longitude: 35.7289,\n    signalStrength: -70,\n    userLoad: 280,\n    uploadSpeed: 50.1,\n    downloadSpeed: 210.2,\n    latency: 19,\n    energyConsumption: 75.0,\n    batteryType: \"Lead-acid\",\n    batteryCapacity: 150,\n    batteryCells: generateBatteryCells(6, true),\n    historicalData: generateHistoricalData(30),\n    powerSource: \"grid\",\n  },\n   {\n    id: 'TWR-007',\n    name: 'Mosaic Tower',\n    location: 'Madaba, Jordan',\n    status: 'normal',\n    latitude: 31.7188,\n    longitude: 35.7944,\n    signalStrength: -62,\n    userLoad: 350,\n    uploadSpeed: 55.0,\n    downloadSpeed: 250.0,\n    latency: 18,\n    energyConsumption: 80.2,\n    batteryType: \"Lithium-ion\",\n    batteryCapacity: 250,\n    batteryCells: generateBatteryCells(12, false),\n    historicalData: generateHistoricalData(30),\n    powerSource: \"solar\",\n  },\n   {\n    id: 'TWR-008',\n    name: 'Moabite Tower',\n    location: 'Karak, Jordan',\n    status: 'warning',\n    latitude: 31.1822,\n    longitude: 35.7622,\n    signalStrength: -90,\n    userLoad: 50,\n    uploadSpeed: 15.0,\n    downloadSpeed: 70.5,\n    latency: 50,\n    energyConsumption: 48.9,\n    batteryType: \"VRLA\",\n    batteryCapacity: 180,\n    batteryCells: generateBatteryCells(8, true),\n    historicalData: generateHistoricalData(30),\n    powerSource: \"grid\",\n  },\n];\n\nexport const mockAlerts: Alert[] = [\n    {\n        id: 'ALT-001',\n        towerId: 'TWR-003',\n        towerName: 'New Zarqa Tower',\n        severity: 'critical',\n        message: 'Battery Communication Failure. Cannot read cell data.',\n        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n    },\n    {\n        id: 'ALT-002',\n        towerId: 'TWR-004',\n        towerName: 'South Beach Tower',\n        severity: 'medium',\n        message: 'Overtemperature detected in battery bank. Cell #3 at 45°C.',\n        timestamp: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),\n    },\n    {\n        id: 'ALT-003',\n        towerId: 'TWR-002',\n        towerName: 'Al-Hashmi Tower',\n        severity: 'high',\n        message: 'Overcurrent Alert: Discharging at 35A. Check for short circuits.',\n        timestamp: new Date(Date.now() - 10 * 60 * 60 * 1000).toISOString(),\n    },\n    {\n        id: 'ALT-004',\n        towerId: 'TWR-008',\n        towerName: 'Moabite Tower',\n        severity: 'medium',\n        message: 'Low State of Health (SoH) on Cell #5. Degraded cell requires review.',\n        timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n    },\n    {\n        id: 'ALT-005',\n        towerId: 'TWR-006',\n        towerName: 'Citadel Tower',\n        severity: 'low',\n        message: 'Maintenance Due Warning: Next checkup scheduled in 7 days.',\n        timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    },\n    {\n        id: 'ALT-006',\n        towerId: 'TWR-001',\n        towerName: 'Khalda Tower',\n        severity: 'high',\n        message: 'Overvoltage detected on Cell #2. Voltage at 4.25V.',\n        timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n    },\n    {\n        id: 'ALT-007',\n        towerId: 'TWR-007',\n        towerName: 'Mosaic Tower',\n        severity: 'medium',\n        message: 'Undervoltage Alert on battery bank. Main bus at 47.5V.',\n        timestamp: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),\n    },\n    {\n        id: 'ALT-008',\n        towerId: 'TWR-005',\n        towerName: 'Downtown Tower',\n        severity: 'high',\n        message: 'Imbalance detected. Voltage delta between cells > 0.5V.',\n        timestamp: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n    },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/alerts/page.tsx"],"sourcesContent":["import {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n  } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { mockAlerts } from \"@/lib/mock-data\";\nimport { cn } from \"@/lib/utils\";\nimport { formatDistanceToNow } from 'date-fns';\nimport { AlertCircle, ShieldAlert, Thermometer, Wrench, Zap, MessageSquareWarning } from \"lucide-react\";\n\nconst severityStyles: { [key: string]: string } = {\n    critical: \"bg-red-500 text-white\",\n    high: \"bg-orange-500 text-white\",\n    medium: \"bg-yellow-500 text-black\",\n    low: \"bg-blue-500 text-white\",\n};\n\nconst getIconForMessage = (message: string) => {\n    const lowerCaseMessage = message.toLowerCase();\n    if (lowerCaseMessage.includes(\"voltage\")) return <ShieldAlert className=\"h-4 w-4\" />;\n    if (lowerCaseMessage.includes(\"temperature\")) return <Thermometer className=\"h-4 w-4\" />;\n    if (lowerCaseMessage.includes(\"overcurrent\")) return <Zap className=\"h-4 w-4\" />;\n    if (lowerCaseMessage.includes(\"communication\")) return <MessageSquareWarning className=\"h-4 w-4\" />;\n    if (lowerCaseMessage.includes(\"maintenance\")) return <Wrench className=\"h-4 w-4\" />;\n    return <AlertCircle className=\"h-4 w-4\" />;\n}\n\nexport default function AlertsPage() {\n    return (\n        <div className=\"space-y-6\">\n            <div>\n                <h1 className=\"text-3xl font-bold font-headline\">Alerts & Fault Detection</h1>\n                <p className=\"text-muted-foreground\">Recent alerts, faults, and notifications from the network.</p>\n            </div>\n            <div className=\"border rounded-lg\">\n                <Table>\n                    <TableHeader>\n                    <TableRow>\n                        <TableHead className=\"w-[100px]\">Severity</TableHead>\n                        <TableHead>Tower</TableHead>\n                        <TableHead>Event / Message</TableHead>\n                        <TableHead className=\"text-right\">Time</TableHead>\n                    </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                    {mockAlerts.map((alert) => (\n                        <TableRow key={alert.id}>\n                        <TableCell>\n                            <Badge className={cn(\"capitalize text-xs\", severityStyles[alert.severity])}>\n                                {alert.severity}\n                            </Badge>\n                        </TableCell>\n                        <TableCell className=\"font-medium\">{alert.towerName}</TableCell>\n                        <TableCell>\n                            <div className=\"flex items-center gap-2\">\n                                {getIconForMessage(alert.message)}\n                                <span>{alert.message}</span>\n                            </div>\n                        </TableCell>\n                        <TableCell className=\"text-right text-muted-foreground text-xs\">\n                            {formatDistanceToNow(new Date(alert.timestamp), { addSuffix: true })}\n                        </TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAAA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAEA,MAAM,iBAA4C;IAC9C,UAAU;IACV,MAAM;IACN,QAAQ;IACR,KAAK;AACT;AAEA,MAAM,oBAAoB,CAAC;IACvB,MAAM,mBAAmB,QAAQ,WAAW;IAC5C,IAAI,iBAAiB,QAAQ,CAAC,YAAY,qBAAO,8OAAC,oNAAA,CAAA,cAAW;QAAC,WAAU;;;;;;IACxE,IAAI,iBAAiB,QAAQ,CAAC,gBAAgB,qBAAO,8OAAC,gNAAA,CAAA,cAAW;QAAC,WAAU;;;;;;IAC5E,IAAI,iBAAiB,QAAQ,CAAC,gBAAgB,qBAAO,8OAAC,gMAAA,CAAA,MAAG;QAAC,WAAU;;;;;;IACpE,IAAI,iBAAiB,QAAQ,CAAC,kBAAkB,qBAAO,8OAAC,0OAAA,CAAA,uBAAoB;QAAC,WAAU;;;;;;IACvF,IAAI,iBAAiB,QAAQ,CAAC,gBAAgB,qBAAO,8OAAC,sMAAA,CAAA,SAAM;QAAC,WAAU;;;;;;IACvE,qBAAO,8OAAC,oNAAA,CAAA,cAAW;QAAC,WAAU;;;;;;AAClC;AAEe,SAAS;IACpB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;;kCACG,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAEzC,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;;sCACF,8OAAC,iIAAA,CAAA,cAAW;sCACZ,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;kDACL,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAY;;;;;;kDACjC,8OAAC,iIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,iIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAa;;;;;;;;;;;;;;;;;sCAGtC,8OAAC,iIAAA,CAAA,YAAS;sCACT,0HAAA,CAAA,aAAU,CAAC,GAAG,CAAC,CAAC,sBACb,8OAAC,iIAAA,CAAA,WAAQ;;sDACT,8OAAC,iIAAA,CAAA,YAAS;sDACN,cAAA,8OAAC,iIAAA,CAAA,QAAK;gDAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB,cAAc,CAAC,MAAM,QAAQ,CAAC;0DACpE,MAAM,QAAQ;;;;;;;;;;;sDAGvB,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,MAAM,SAAS;;;;;;sDACnD,8OAAC,iIAAA,CAAA,YAAS;sDACN,cAAA,8OAAC;gDAAI,WAAU;;oDACV,kBAAkB,MAAM,OAAO;kEAChC,8OAAC;kEAAM,MAAM,OAAO;;;;;;;;;;;;;;;;;sDAG5B,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAChB,CAAA,GAAA,mJAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,KAAK,MAAM,SAAS,GAAG;gDAAE,WAAW;4CAAK;;;;;;;mCAdvD,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuB/C","debugId":null}}]
}