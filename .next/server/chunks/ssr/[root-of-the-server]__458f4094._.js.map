{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/tower-advisor-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent that provides advice on telecom towers.\n *\n * - getTowerAdvice - A function that returns analysis and recommendations for a tower.\n * - TowerAdvisorInput - The input type for the getTowerAdvice function.\n * - TowerAdvisorOutput - The return type for the getTowerAdvice function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\nconst TowerAdvisorInputSchema = z.object({\n    name: z.string().describe(\"The name of the tower.\"),\n    status: z.enum(['active', 'inactive', 'maintenance']).describe(\"The current status of the tower.\"),\n    userLoad: z.number().describe(\"The number of users currently connected to the tower.\"),\n    signalStrength: z.number().describe(\"The signal strength in dBm.\"),\n    latency: z.number().describe(\"The network latency in ms.\"),\n    energyConsumption: z.number().describe(\"The energy consumption in kWh.\"),\n});\nexport type TowerAdvisorInput = z.infer<typeof TowerAdvisorInputSchema>;\n\nconst TowerAdvisorOutputSchema = z.object({\n  analysis: z.string().describe(\"A general analysis of the tower's current condition, in Arabic.\"),\n  recommendations: z.array(z.string()).describe(\"A list of actionable recommendations to improve or maintain the tower's performance, in Arabic.\"),\n});\nexport type TowerAdvisorOutput = z.infer<typeof TowerAdvisorOutputSchema>;\n\nexport async function getTowerAdvice(input: TowerAdvisorInput): Promise<TowerAdvisorOutput> {\n  return towerAdvisorFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'towerAdvisorPrompt',\n  input: { schema: TowerAdvisorInputSchema },\n  output: { schema: TowerAdvisorOutputSchema },\n  prompt: `أنت خبير في شبكات الاتصالات ومهمتك هي تحليل بيانات برج اتصالات وتقديم نصائح باللغة العربية.\n  \n  البرج: {{{name}}}\n  الحالة: {{{status}}}\n  عدد المستخدمين: {{{userLoad}}}\n  قوة الإشارة: {{{signalStrength}}} dBm\n  زمن الاستجابة: {{{latency}}} ms\n  استهلاك الطاقة: {{{energyConsumption}}} kWh\n\n  بناءً على هذه البيانات، قم بما يلي:\n  1. قدم تحليلًا عامًا لحالة البرج. اشرح ماذا تعني هذه الأرقام.\n  2. قدم قائمة من التوصيات العملية (2-3 توصيات) لتحسين الأداء أو معالجة المشاكل المحتملة.\n  \n  مثال على التحليل: \"برج {{{name}}} يعمل حاليًا ولكن يواجه ضغطًا عاليًا من المستخدمين مما قد يؤثر على جودة الخدمة.\"\n  مثال على التوصيات: \"مراقبة الحمل على مدار اليوم لتحديد ساعات الذروة.\" أو \"جدولة صيانة وقائية للتحقق من أجهزة الإرسال.\"\n  \n  يجب أن يكون الرد دائمًا باللغة العربية.`,\n});\n\nconst towerAdvisorFlow = ai.defineFlow(\n  {\n    name: 'towerAdvisorFlow',\n    inputSchema: TowerAdvisorInputSchema,\n    outputSchema: TowerAdvisorOutputSchema,\n  },\n  async (input) => {\n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,QAAQ,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;QAAY;KAAc,EAAE,QAAQ,CAAC;IAC/D,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC3C;AAGA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,iBAAiB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAChD;AAGO,eAAe,eAAe,KAAwB;IAC3D,OAAO,iBAAiB;AAC1B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAAwB;IACzC,QAAQ;QAAE,QAAQ;IAAyB;IAC3C,QAAQ,CAAC;;;;;;;;;;;;;;;;yCAgB8B,CAAC;AAC1C;AAEA,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACpC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IApCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/towers/%5Bid%5D/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getTowerAdvice as '40d38a3cad083fbfeac6db5c11b5ac92717f7e3f03'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/tower-status-badge.tsx"],"sourcesContent":["import { Badge } from \"@/components/ui/badge\";\nimport type { TowerStatus } from \"@/lib/types\";\nimport { cn } from \"@/lib/utils\";\n\ninterface TowerStatusBadgeProps {\n  status: TowerStatus;\n}\n\nexport default function TowerStatusBadge({ status }: TowerStatusBadgeProps) {\n  const statusStyles = {\n    active: \"bg-green-100 text-green-800 border-green-200 dark:bg-green-900/50 dark:text-green-300 dark:border-green-800\",\n    inactive: \"bg-red-100 text-red-800 border-red-200 dark:bg-red-900/50 dark:text-red-300 dark:border-red-800\",\n    maintenance: \"bg-yellow-100 text-yellow-800 border-yellow-200 dark:bg-yellow-900/50 dark:text-yellow-300 dark:border-yellow-800\",\n  };\n\n  return (\n    <Badge\n      variant=\"outline\"\n      className={cn(\"capitalize\", statusStyles[status])}\n    >\n      {status}\n    </Badge>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAMe,SAAS,iBAAiB,EAAE,MAAM,EAAyB;IACxE,MAAM,eAAe;QACnB,QAAQ;QACR,UAAU;QACV,aAAa;IACf;IAEA,qBACE,8OAAC,iIAAA,CAAA,QAAK;QACJ,SAAQ;QACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc,YAAY,CAAC,OAAO;kBAE/C;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/charts/tower-detail-charts.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/charts/tower-detail-charts.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/tower-detail-charts.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiT,GAC9U,+EACA","debugId":null}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/charts/tower-detail-charts.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/charts/tower-detail-charts.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/charts/tower-detail-charts.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/towers/%5Bid%5D/page.tsx"],"sourcesContent":["import { notFound } from \"next/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport TowerStatusBadge from \"@/components/tower-status-badge\";\nimport { Signal, Users, Gauge, Zap, ArrowDown, ArrowUp, Timer, BrainCircuit, Bot } from \"lucide-react\";\nimport TowerDetailCharts from \"@/components/charts/tower-detail-charts\";\nimport Link from \"next/link\";\nimport { Button } from \"@/components/ui/button\";\nimport { ChevronLeft } from \"lucide-react\";\nimport type { Tower } from \"@/lib/types\";\nimport { getTowerAdvice } from \"@/ai/flows/tower-advisor-flow\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\n\n\n// This function would fetch a single tower from your API in a real app\nasync function getTower(id: string): Promise<Tower | undefined> {\n  // We are now fetching from the API endpoint we created\n  try {\n    const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/towers/${id}`, { cache: 'no-store' });\n    if (!res.ok) { \n        console.error(`Failed to fetch tower ${id}: ${res.statusText}`);\n        return undefined;\n     }\n    const towers: Tower[] = await res.json();\n    // Our API returns an array, even for a single tower by id\n    return towers.find(t => t.id === id);\n  } catch (error) {\n    console.error(\"Error fetching tower data:\", error);\n    return undefined;\n  }\n}\n\nasync function AiAdvice({ tower }: { tower: Tower }) {\n  const advice = await getTowerAdvice({\n    name: tower.name,\n    status: tower.status,\n    userLoad: tower.userLoad,\n    signalStrength: tower.signalStrength,\n    latency: tower.latency,\n    energyConsumption: tower.energyConsumption\n  });\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <BrainCircuit className=\"h-6 w-6 text-primary\" />\n          تحليل وتوصيات الذكاء الاصطناعي\n        </CardTitle>\n        <CardDescription>\n          نصائح مقدمة من Gemini للمساعدة في تحسين أداء البرج.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <Alert>\n          <Bot className=\"h-4 w-4\" />\n          <AlertTitle>التحليل العام</AlertTitle>\n          <AlertDescription>\n            {advice.analysis}\n          </AlertDescription>\n        </Alert>\n         <Alert variant=\"destructive\">\n          <AlertTitle>التوصيات</AlertTitle>\n          <AlertDescription>\n            <ul className=\"list-disc pl-5 space-y-1 mt-2\">\n              {advice.recommendations.map((rec, index) => (\n                <li key={index}>{rec}</li>\n              ))}\n            </ul>\n          </AlertDescription>\n        </Alert>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default async function TowerDetailPage({ params }: { params: { id: string } }) {\n  const tower = await getTower(params.id);\n\n  if (!tower) {\n    notFound();\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n         <Button asChild variant=\"outline\" size=\"sm\" className=\"mb-4\">\n             <Link href=\"/dashboard\">\n                <ChevronLeft className=\"mr-2 h-4 w-4\"/>\n                العودة إلى النظرة العامة\n             </Link>\n         </Button>\n        <div className=\"flex justify-between items-start\">\n            <div>\n                 <h1 className=\"text-3xl font-bold font-headline\">{tower.name}</h1>\n                <p className=\"text-muted-foreground\">{tower.location}</p>\n            </div>\n            <TowerStatusBadge status={tower.status} />\n        </div>\n      </div>\n      \n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\"><CardTitle className=\"text-sm font-medium\">قوة الإشارة</CardTitle><Signal className=\"h-4 w-4 text-muted-foreground\"/></CardHeader>\n            <CardContent><div className=\"text-2xl font-bold\">{tower.signalStrength} dBm</div></CardContent>\n        </Card>\n        <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\"><CardTitle className=\"text-sm font-medium\">عدد المستخدمين</CardTitle><Users className=\"h-4 w-4 text-muted-foreground\"/></CardHeader>\n            <CardContent><div className=\"text-2xl font-bold\">{tower.userLoad}</div></CardContent>\n        </Card>\n        <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\"><CardTitle className=\"text-sm font-medium\">سرعات البيانات</CardTitle><Gauge className=\"h-4 w-4 text-muted-foreground\"/></CardHeader>\n            <CardContent className=\"text-sm\">\n                <div className=\"flex items-center\"><ArrowDown className=\"h-4 w-4 mr-2 text-green-500\" /> {tower.downloadSpeed} Mbps</div>\n                <div className=\"flex items-center\"><ArrowUp className=\"h-4 w-4 mr-2 text-blue-500\" /> {tower.uploadSpeed} Mbps</div>\n            </CardContent>\n        </Card>\n        <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2\"><CardTitle className=\"text-sm font-medium\">زمن الاستجابة</CardTitle><Timer className=\"h-4 w-4 text-muted-foreground\"/></CardHeader>\n            <CardContent><div className=\"text-2xl font-bold\">{tower.latency} ms</div></CardContent>\n        </Card>\n      </div>\n      \n      <AiAdvice tower={tower} />\n\n      <Card>\n        <CardHeader>\n          <CardTitle>الأداء التاريخي</CardTitle>\n          <CardDescription>بيانات أداء آخر 30 يومًا لبرج {tower.name}.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"h-[450px]\">\n          <TowerDetailCharts historicalData={tower.historicalData} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}