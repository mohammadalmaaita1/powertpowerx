{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/tower-map.tsx"],"sourcesContent":["'use client';\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindowF } from '@react-google-maps/api';\nimport React from 'react';\nimport type { Tower } from \"@/lib/types\";\n\ninterface TowerMapProps {\n    towers: Tower[];\n    center?: { lat: number; lng: number };\n    zoom?: number;\n}\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  borderRadius: '0.5rem',\n};\n\n// Default center (Amman, Jordan)\nconst defaultCenter = {\n  lat: 31.9539,\n  lng: 35.9106\n};\n\nconst statusColors = {\n    active: \"green\",\n    maintenance: \"yellow\",\n    inactive: \"red\",\n};\n\nexport default function TowerMap({ towers, center = defaultCenter, zoom = 7 }: TowerMapProps) {\n    const { isLoaded, loadError } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"\" // Add your Google Maps API key here\n    });\n\n    const [selectedTower, setSelectedTower] = React.useState<Tower | null>(null);\n\n    const mapOptions = {\n        styles: [\n            { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\n            { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\n            { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\n            {\n                featureType: \"administrative.locality\",\n                elementType: \"labels.text.fill\",\n                stylers: [{ color: \"#d59563\" }],\n            },\n            {\n                featureType: \"poi\",\n                elementType: \"labels.text.fill\",\n                stylers: [{ color: \"#d59563\" }],\n            },\n            {\n                featureType: \"poi.park\",\n                elementType: \"geometry\",\n                stylers: [{ color: \"#263c3f\" }],\n            },\n            {\n                featureType: \"poi.park\",\n                elementType: \"labels.text.fill\",\n                stylers: [{ color: \"#6b9a76\" }],\n            },\n            {\n                featureType: \"road\",\n                elementType: \"geometry\",\n                stylers: [{ color: \"#38414e\" }],\n            },\n            {\n                featureType: \"road\",\n                elementType: \"geometry.stroke\",\n                stylers: [{ color: \"#212a37\" }],\n            },\n            {\n                featureType: \"road\",\n                elementType: \"labels.text.fill\",\n                stylers: [{ color: \"#9ca5b3\" }],\n            },\n            {\n                featureType: \"road.highway\",\n                elementType: \"geometry\",\n                stylers: [{ color: \"#746855\" }],\n            },\n            {\n                featureType: \"road.highway\",\n                elementType: \"geometry.stroke\",\n                stylers: [{ color: \"#1f2835\" }],\n            },\n            {\n                featureType: \"road.highway\",\n                elementType: \"labels.text.fill\",\n                stylers: [{ color: \"#f3d19c\" }],\n            },\n            {\n                featureType: \"transit\",\n                elementType: \"geometry\",\n                stylers: [{ color: \"#2f3948\" }],\n            },\n            {\n                featureType: \"transit.station\",\n                elementType: \"labels.text.fill\",\n                stylers: [{ color: \"#d59563\" }],\n            },\n            {\n                featureType: \"water\",\n                elementType: \"geometry\",\n                stylers: [{ color: \"#17263c\" }],\n            },\n            {\n                featureType: \"water\",\n                elementType: \"labels.text.fill\",\n                stylers: [{ color: \"#515c6d\" }],\n            },\n            {\n                featureType: \"water\",\n                elementType: \"labels.text.stroke\",\n                stylers: [{ color: \"#17263c\" }],\n            },\n        ],\n        disableDefaultUI: true,\n        zoomControl: true,\n    };\n\n    if (loadError) {\n        return <div>Map cannot be loaded right now, sorry.</div>;\n    }\n\n    if (!isLoaded) {\n        return <div className=\"flex items-center justify-center h-full\">Loading Map...</div>;\n    }\n\n    return (\n        <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={center}\n            zoom={zoom}\n            options={mapOptions}\n        >\n            {towers.map(tower => (\n                <MarkerF\n                    key={tower.id}\n                    position={{ lat: tower.latitude, lng: tower.longitude }}\n                    onClick={() => setSelectedTower(tower)}\n                    icon={{\n                        path: window.google.maps.SymbolPath.CIRCLE,\n                        scale: 8,\n                        fillColor: statusColors[tower.status],\n                        fillOpacity: 1,\n                        strokeWeight: 1,\n                        strokeColor: '#ffffff'\n                    }}\n                />\n            ))}\n\n            {selectedTower && (\n                <InfoWindowF\n                    position={{ lat: selectedTower.latitude, lng: selectedTower.longitude }}\n                    onCloseClick={() => setSelectedTower(null)}\n                >\n                    <div className=\"bg-background text-foreground p-2 rounded-lg shadow-lg\">\n                        <h3 className=\"font-bold\">{selectedTower.name}</h3>\n                        <p className=\"capitalize text-sm\">Status: {selectedTower.status}</p>\n                    </div>\n                </InfoWindowF>\n            )}\n        </GoogleMap>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}